apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: harbor-operator-system/harbor-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.4
  name: harbors.goharbor.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.version
    description: The semver Harbor version
    name: Version
    priority: 5
    type: string
  - JSONPath: .spec.publicURL
    description: The public URL to the Harbor application
    name: Public URL
    type: string
  - JSONPath: .status.conditions[?(@.type=="Applied")].status
    description: The current status of the new Harbor spec
    name: Applied
    priority: 20
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    description: The current status of the Harbor application
    name: Ready
    priority: 10
    type: string
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: harbor-operator-webhook-service
        namespace: harbor-operator-system
        path: /convert
  group: goharbor.io
  names:
    kind: Harbor
    listKind: HarborList
    plural: harbors
    shortNames:
    - h
    singular: harbor
  preserveUnknownFields: false
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: Harbor is the Schema for the harbors API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HarborSpec defines the desired state of Harbor
          properties:
            adminPasswordSecret:
              description: The name of the secret containing the password for root user
              type: string
            certificateIssuerRef:
              description: The issuer for Harbor certificates. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
              properties:
                group:
                  type: string
                kind:
                  type: string
                name:
                  type: string
              required:
              - name
              type: object
            components:
              properties:
                chartMuseum:
                  properties:
                    cacheSecret:
                      type: string
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                    storageSecret:
                      type: string
                  type: object
                clair:
                  properties:
                    adapter:
                      properties:
                        image:
                          type: string
                        redisSecret:
                          type: string
                      required:
                      - redisSecret
                      type: object
                    databaseSecret:
                      type: string
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                    vulnerabilitySources:
                      items:
                        type: string
                      type: array
                  required:
                  - adapter
                  - databaseSecret
                  - vulnerabilitySources
                  type: object
                core:
                  properties:
                    databaseSecret:
                      type: string
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                  - databaseSecret
                  type: object
                jobService:
                  properties:
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    redisSecret:
                      type: string
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                    workerCount:
                      format: int32
                      type: integer
                  required:
                  - redisSecret
                  type: object
                notary:
                  properties:
                    dbMigrator:
                      properties:
                        image:
                          type: string
                      type: object
                    publicURL:
                      description: The url exposed to clients to access notary
                      pattern: ^https?://.*$
                      type: string
                    server:
                      properties:
                        databaseSecret:
                          type: string
                        image:
                          type: string
                        imagePullSecrets:
                          items:
                            description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                            type: object
                          type: array
                        nodeSelector:
                          additionalProperties:
                            type: string
                          type: object
                        replicas:
                          description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                          format: int32
                          minimum: 1
                          type: integer
                      required:
                      - databaseSecret
                      type: object
                    signer:
                      properties:
                        databaseSecret:
                          type: string
                        image:
                          type: string
                        imagePullSecrets:
                          items:
                            description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                            type: object
                          type: array
                        nodeSelector:
                          additionalProperties:
                            type: string
                          type: object
                        replicas:
                          description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                          format: int32
                          minimum: 1
                          type: integer
                      required:
                      - databaseSecret
                      type: object
                  required:
                  - publicURL
                  - server
                  - signer
                  type: object
                portal:
                  properties:
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                  type: object
                registry:
                  properties:
                    cacheSecret:
                      type: string
                    controller:
                      properties:
                        image:
                          type: string
                      type: object
                    image:
                      type: string
                    imagePullSecrets:
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    replicas:
                      description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                      format: int32
                      minimum: 1
                      type: integer
                    storageSecret:
                      type: string
                  type: object
              type: object
            paused:
              description: Indicates that the harbor is paused.
              type: boolean
            priority:
              description: The Maximum priority. Deployments may be created with priority in interval ] priority - 100 ; priority ]
              format: int32
              type: integer
            publicURL:
              description: The url exposed to clients to access harbor
              pattern: ^https?://.*$
              type: string
            readOnly:
              description: The option to set repository read only.
              type: boolean
            tlsSecretName:
              description: The name of the secret containing the TLS secret used for ingresses
              type: string
            version:
              description: The Harbor semver version https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
              pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
              type: string
          required:
          - adminPasswordSecret
          - certificateIssuerRef
          - publicURL
          - version
          type: object
        status:
          description: Most recently observed status of the Harbor.
          properties:
            conditions:
              description: Represents the latest available observations of a harbor's current state.
              items:
                description: HarborCondition describes the state of a Harbor at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of harhor condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: harbor-operator-leader-election-role
  namespace: harbor-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: harbor-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - goharbor.io
  resources:
  - harbors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - goharbor.io
  resources:
  - harbors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: harbor-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: harbor-operator-leader-election-rolebinding
  namespace: harbor-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: harbor-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harbor-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harbor-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harbor-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harbor-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-operator-system
---
apiVersion: v1
data:
  HARBOR_CONTROLLER_MAX_RECONCILE: "1"
  HARBOR_CONTROLLER_WATCH_CHILDREN: "true"
kind: ConfigMap
metadata:
  name: harbor-operator-operator-config-4k8gmmdgm2
  namespace: harbor-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: harbor-operator-controller-manager-metrics-service
  namespace: harbor-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: harbor-operator-webhook-service
  namespace: harbor-operator-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: harbor-operator-controller-manager
  namespace: harbor-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: CONFIGURATION_FROM
          value: 'env:'
        envFrom:
        - configMapRef:
            name: harbor-operator-operator-config-4k8gmmdgm2
            optional: true
        image: goharbor/harbor-operator:dev
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 300Mi
          requests:
            cpu: 500m
            memory: 200Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: harbor-operator-serving-cert
  namespace: harbor-operator-system
spec:
  dnsNames:
  - harbor-operator-webhook-service.harbor-operator-system.svc
  - harbor-operator-webhook-service.harbor-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: harbor-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: harbor-operator-selfsigned-issuer
  namespace: harbor-operator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: harbor-operator-system/harbor-operator-serving-cert
  name: harbor-operator-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: harbor-operator-webhook-service
      namespace: harbor-operator-system
      path: /mutate-goharbor-io-v1alpha1-harbor
  failurePolicy: Fail
  name: mharbor.kb.io
  rules:
  - apiGroups:
    - goharbor.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - harbors
